#src SConscript (Base Executable and Library)
Import('env')

platform_sanity_checks(env) #Test for situations where compilation will surely fail
perform_compiler_configuration(env, 0) #Get information about the environment
check_platform_specific_libs(env)

#PI- Platform Independent, PD- Platform Dependent
xfer_exe_src = Split('trxcom.c')
pi_src = [Dir('.').File(src) for src in Split('serial.c xmodem.c sfl.c')]
pd_src = [Dir(env['TARGET_OS']).File(src) for src in Split('serprim.c')]
env.AppendUnique(CPPPATH = '.') #We are using a variant directory.
#This ensures both variant and orig directory are included.
#Rationale: http://four.pairlist.net/pipermail/scons-users/2014-April/002440.html

pi_objs = env.Object(pi_src) #We'll need pi_src
core_lib = env.Library('modem', pd_src + pi_objs)
Default(core_lib)

#Install if the host OS matches target OS
if env['PLATFORM'].lower() == env['TARGET_OS'].lower():
    env.Install(env['HOST_INSTALL_DIR'], [core_lib])

Return('pi_objs')
